
1 - Criando container de MySQL 5.7
pedro@phantro MINGW64 /d/curso/kubernetes/mysql (master)
$ docker-compose up -d
Creating network "mysql_default" with the default driver
Pulling db (mysql:5.7)...
5.7: Pulling from library/mysql
Digest: sha256:32f9d9a069f7a735e28fd44ea944d53c61f990ba71460c5c183e610854ca4854
Status: Downloaded newer image for mysql:5.7
Creating banco_mysql ... done

Outro exemplo:
pedro@phantro MINGW64 /d/curso/kubernetes/mysql (master)
$ docker-compose up -d
Creating banco_mysql ... done


2 - Rodando novo container
pedro@phantro MINGW64 /d/curso/kubernetes/mysql (master)
$ docker-compose up -d
Starting banco_mysql ... done

Outro exemplo:
pedro@phantro MINGW64 /d/curso/kubernetes/mysql (master)
$ docker-compose up -d
Starting banco_mysql ... done

3 - Verificando o que está rodando
pedro@phantro MINGW64 /d/curso/kubernetes/mysql (master)
$ docker-compose ps
The system cannot find the path specified.
   Name                 Command             State                 Ports
-------------------------------------------------------------------------------------
banco_mysql   docker-entrypoint.sh mysqld   Up      0.0.0.0:3306->3306/tcp, 33060/tcp

pedro@phantro MINGW64 /d/curso/kubernetes/mysql (master)
$ docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                               NAMES
ca06e879eca8        mysql:5.7           "docker-entrypoint.s…"   2 minutes ago       Up 12 seconds       0.0.0.0:3306->3306/tcp, 33060/tcp   banco_mysql


pedro@phantro MINGW64 /d/curso/kubernetes/mysql (master)
$ docker-compose ps -a

The system cannot find the path specified.
   Name                 Command             State                 Ports
-------------------------------------------------------------------------------------
banco_mysql   docker-entrypoint.sh mysqld   Up      0.0.0.0:3306->3306/tcp, 33060/tcp


4 - Acessando o container
pedro@phantro MINGW64 /d/curso/kubernetes/mysql (master)
$ docker exec -it banco_mysql sh --tty
the input device is not a TTY.  If you are using mintty, try prefixing the command with 'winpty'

pedro@phantro MINGW64 /d/curso/kubernetes/mysql (master)
$ winpty docker exec -it banco_mysql sh
#
#

4.1 - Importando usuários
root@ca06e879eca8:/home# sh import.sh
mysql: [Warning] Using a password on the command line interface can be insecure.
mysql: [Warning] Using a password on the command line interface can be insecure.
root@ca06e879eca8:/home#


5 - Subindo os dois serviços restantes
pedro@phantro MINGW64 /d/curso/kubernetes/mysql (master)
$ cd ..

pedro@phantro MINGW64 /d/curso/kubernetes (master)
$ ls
comandos.txt  docker-compose.yml  mysql/  noticias/  sistema/

pedro@phantro MINGW64 /d/curso/kubernetes (master)
$ docker-compose up -d
Creating network "kubernetes_default" with the default driver
Pulling noticias_web (jnlucas/image-phpmysql:latest)...
latest: Pulling from jnlucas/image-phpmysql
Digest: sha256:b730587aabc4d518555bcf2c533709d8cccb1d637bbc0a1daee6f07f6d3c17cb
Status: Downloaded newer image for jnlucas/image-phpmysql:latest
Creating container-kube          ... done
Creating container-kube-noticias ... done

pedro@phantro MINGW64 /d/curso/kubernetes (master)
$

6 - Verificando se os containers necessários estão rodando
pedro@phantro MINGW64 /d/curso/kubernetes (master)
$ docker ps
CONTAINER ID        IMAGE                           COMMAND                  CREATED             STATUS              PORTS                               NAMES
3b56f81d610f        jnlucas/image-phpmysql:latest   "docker-php-entrypoi…"   27 seconds ago      Up About a minute   0.0.0.0:8588->80/tcp                container-kube-noticias
92acaae73c22        jnlucas/image-phpmysql:latest   "docker-php-entrypoi…"   27 seconds ago      Up About a minute   0.0.0.0:8587->80/tcp                container-kube
ca06e879eca8        mysql:5.7                       "docker-entrypoint.s…"   28 minutes ago      Up 25 minutes       0.0.0.0:3306->3306/tcp, 33060/tcp   banco_mysql

pedro@phantro MINGW64 /d/curso/kubernetes (master)
$

7 - Instalando kubectl e minikube

Seguir os tutoriais:
	https://v1-16.docs.kubernetes.io/docs/tasks/tools/install-kubectl/
	https://v1-16.docs.kubernetes.io/docs/tasks/tools/install-minikube/
	
pedro@phantro MINGW64 /d/curso/kubernetes (master)
$ kubectl
kubectl controls the Kubernetes cluster manager.

 Find more information at: https://kubernetes.io/docs/reference/kubectl/overview/

Basic Commands (Beginner):
  create         Create a resource from a file or from stdin.
  expose         Take a replication controller, service, deployment or pod and expose it as a new Kubernetes Service
  run            Run a particular image on the cluster
  set            Set specific features on objects

Basic Commands (Intermediate):
  explain        Documentation of resources
  get            Display one or many resources
  edit           Edit a resource on the server
  delete         Delete resources by filenames, stdin, resources and names, or by resources and label selector

Deploy Commands:
  rollout        Manage the rollout of a resource
  scale          Set a new size for a Deployment, ReplicaSet, Replication Controller, or Job
  autoscale      Auto-scale a Deployment, ReplicaSet, or ReplicationController

Cluster Management Commands:
  certificate    Modify certificate resources.
  cluster-info   Display cluster info
  top            Display Resource (CPU/Memory/Storage) usage.
  cordon         Mark node as unschedulable
  uncordon       Mark node as schedulable
  drain          Drain node in preparation for maintenance
  taint          Update the taints on one or more nodes

Troubleshooting and Debugging Commands:
  describe       Show details of a specific resource or group of resources
  logs           Print the logs for a container in a pod
  attach         Attach to a running container
  exec           Execute a command in a container
  port-forward   Forward one or more local ports to a pod
  proxy          Run a proxy to the Kubernetes API server
  cp             Copy files and directories to and from containers.
  auth           Inspect authorization

Advanced Commands:
  diff           Diff live version against would-be applied version
  apply          Apply a configuration to a resource by filename or stdin
  patch          Update field(s) of a resource using strategic merge patch
  replace        Replace a resource by filename or stdin
  wait           Experimental: Wait for a specific condition on one or many resources.
  convert        Convert config files between different API versions
  kustomize      Build a kustomization target from a directory or a remote url.

Settings Commands:
  label          Update the labels on a resource
  annotate       Update the annotations on a resource
  completion     Output shell completion code for the specified shell (bash or zsh)

Other Commands:
  api-resources  Print the supported API resources on the server
  api-versions   Print the supported API versions on the server, in the form of "group/version"
  config         Modify kubeconfig files
  plugin         Provides utilities for interacting with plugins.
  version        Print the client and server version information

Usage:
  kubectl [flags] [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).

pedro@phantro MINGW64 /d/curso/kubernetes (master)
$ minikube
minikube provisions and manages local Kubernetes clusters optimized for development workflows.

Basic Commands:
  start          Starts a local Kubernetes cluster
  status         Gets the status of a local Kubernetes cluster
  stop           Stops a running local Kubernetes cluster
  delete         Deletes a local Kubernetes cluster
  dashboard      Access the Kubernetes dashboard running within the minikube cluster
  pause          pause Kubernetes
  unpause        unpause Kubernetes

Images Commands:
  docker-env     Configure environment to use minikube's Docker daemon
  podman-env     Configure environment to use minikube's Podman service
  cache          Add, delete, or push a local image into minikube

Configuration and Management Commands:
  addons         Enable or disable a minikube addon
  config         Modify persistent configuration values
  profile        Get or list the the current profiles (clusters)
  update-context Update kubeconfig in case of an IP or port change

Networking and Connectivity Commands:
  service        Returns a URL to connect to a service
  tunnel         Connect to LoadBalancer services

Advanced Commands:
  mount          Mounts the specified directory into minikube
  ssh            Log into the minikube environment (for debugging)
  kubectl        Run a kubectl binary matching the cluster version
  node           Add, remove, or list additional nodes

Troubleshooting Commands:
  ssh-key        Retrieve the ssh identity key path of the specified cluster
  ip             Retrieves the IP address of the running cluster
  logs           Returns logs to debug a local Kubernetes cluster
  update-check   Print current and latest version number
  version        Print the version of minikube

Other Commands:
  completion     Generate command completion for a shell

Use "minikube <command> --help" for more information about a given command.

pedro@phantro MINGW64 /d/curso/kubernetes (master)

$ minikube status
* There is no local cluster named "minikube"
  - To fix this, run: "minikube start"

8 - Exacutando o minikube
pedro@phantro MINGW64 /d/curso/kubernetes (master)
$ minikube start
* minikube v1.11.0 on Microsoft Windows 7 Ultimate Service Pack 1 6.1.7601 Build 7601
* Automatically selected the virtualbox driver
* Downloading VM boot image ...
    > minikube-v1.11.0.iso.sha256: 65 B / 65 B [-------------] 100.00% ? p/s 0s
    > minikube-v1.11.0.iso: 174.99 MiB / 174.99 MiB  100.00% 1.08 MiB p/s 2m42s
* Starting control plane node minikube in cluster minikube
* Downloading Kubernetes v1.18.3 preload ...
    > preloaded-images-k8s-v3-v1.18.3-docker-overlay2-amd64.tar.lz4: 526.01 MiB
* Creating virtualbox VM (CPUs=2, Memory=2200MB, Disk=20000MB) ...
* Found network options:
  - NO_PROXY=192.168.99.100
  - no_proxy=192.168.99.100
* Preparing Kubernetes v1.18.3 on Docker 19.03.8 ...
  - env NO_PROXY=192.168.99.100
* Verifying Kubernetes components...
* Enabled addons: default-storageclass, storage-provisioner
* Done! kubectl is now configured to use "minikube"

! C:\Users\pedro\Desktop\HomeOffice\Kubernetes\kubectl.exe is version 1.16.8, which may be incompatible with Kubernetes 1.18.3.
* You can also use 'minikube kubectl -- get pods' to invoke a matching version

pedro@phantro MINGW64 /d/curso/kubernetes (master)
$

9 - Verificando o painel 
pedro@phantro MINGW64 /d/curso/kubernetes (master)
$ minikube dashboard
* Enabling dashboard ...
* Verifying dashboard health ...
* Launching proxy ...
* Verifying proxy health ...
* Opening http://127.0.0.1:58548/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/ in your default browser...


10 - Comandos úteis

O Minikube implementa um cluster local do Kubernetes para Linux, Mac e Windows. 
O objetivo principal é ser uma ótima ferramenta para o desenvolvimento local de aplicativos Kubernetes para experimentar, 
aprender, rodar testes e usar na integração contínua.

Abaixo, temos os principais comandos do Minikube.

Para iniciar o Minikube:

minikube start

Para iniciar o Minikube com uma versão especifica do Kubernetes:

minikube start --kubernetes-version="v1.16"

Para acessar o dashboard do Kubernetes em execução:

minikube dashboard

Para ver o status do Minikube:

minikube status

Para parar o cluster:

minikube stop

Para se conectar pelo SSH com o nó master do cluster:

minikube ssh

E para remover o cluster:

minikube delete

E para remover todos os clusters e perfis:

minikube delete --all


11 - Criando o primeiro pod

11.1 - Para mover o yml para dentro do cluster:
pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ kubectl create -f aplicacao.yml
pod/aplicacao-noticia created

11.2 - Verificando se o pod foio criado
pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ kubectl get pods
NAME                READY   STATUS    RESTARTS   AGE
aplicacao-noticia   1/1     Running   0          96s

11.3 - Verificando informações dos pods:

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ kubectl describe pods
Name:         aplicacao-noticia
Namespace:    default
Priority:     0
Node:         minikube/192.168.99.106
Start Time:   Wed, 08 Jul 2020 16:26:14 -0300
Labels:       <none>
Annotations:  <none>
Status:       Running
IP:           172.17.0.6
IPs:
  IP:  172.17.0.6
Containers:
  container-aplicacao:
    Container ID:   docker://ef691a1eb89b1ab55061e0c0e63e4ab37bcf410830fcba52f730e90156df812d
    Image:          jnlucas/image-phpmysql:latest
    Image ID:       docker-pullable://jnlucas/image-phpmysql@sha256:b730587aabc4d518555bcf2c533709d8cccb1d637bbc0a1daee6f07f6d3c17cb
    Port:           80/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Wed, 08 Jul 2020 16:27:13 -0300
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-nd24n (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  default-token-nd24n:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-nd24n
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s
                 node.kubernetes.io/unreachable:NoExecute for 300s
Events:
  Type    Reason     Age    From               Message
  ----    ------     ----   ----               -------
  Normal  Scheduled  2m36s  default-scheduler  Successfully assigned default/aplicacao-noticia to minikube
  Normal  Pulling    2m36s  kubelet, minikube  Pulling image "jnlucas/image-phpmysql:latest"
  Normal  Pulled     99s    kubelet, minikube  Successfully pulled image "jnlucas/image-phpmysql:latest"
  Normal  Created    97s    kubelet, minikube  Created container container-aplicacao
  Normal  Started    97s    kubelet, minikube  Started container container-aplicacao

pedro@phantro MINGW64 ~/kubernetes/kubernetes

11.4 - Informações específicas do pod aplicacao-noticia

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ kubectl describe pods aplicacao-noticia
Name:         aplicacao-noticia
Namespace:    default
Priority:     0
Node:         minikube/192.168.99.106
Start Time:   Wed, 08 Jul 2020 16:26:14 -0300
Labels:       <none>
Annotations:  <none>
Status:       Running
IP:           172.17.0.6
IPs:
  IP:  172.17.0.6
Containers:
  container-aplicacao:
    Container ID:   docker://ef691a1eb89b1ab55061e0c0e63e4ab37bcf410830fcba52f730e90156df812d
    Image:          jnlucas/image-phpmysql:latest
    Image ID:       docker-pullable://jnlucas/image-phpmysql@sha256:b730587aabc4d518555bcf2c533709d8cccb1d637bbc0a1daee6f07f6d3c17cb
    Port:           80/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Wed, 08 Jul 2020 16:27:13 -0300
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-nd24n (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  default-token-nd24n:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-nd24n
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s
                 node.kubernetes.io/unreachable:NoExecute for 300s
Events:
  Type    Reason     Age    From               Message
  ----    ------     ----   ----               -------
  Normal  Scheduled  4m43s  default-scheduler  Successfully assigned default/aplicacao-noticia to minikube
  Normal  Pulling    4m43s  kubelet, minikube  Pulling image "jnlucas/image-phpmysql:latest"
  Normal  Pulled     3m46s  kubelet, minikube  Successfully pulled image "jnlucas/image-phpmysql:latest"
  Normal  Created    3m44s  kubelet, minikube  Created container container-aplicacao
  Normal  Started    3m44s  kubelet, minikube  Started container container-aplicacao

pedro@phantro MINGW64 ~/kubernetes/kubernetes

12 - Conceitos introduzidos:
    Kubernetes é um cluster que administra e orquestra container
    
	Minikube é um ambiente de teste do Kubernetes
    
	Para rodar Minikube serve o comando: minikube start
    
	kubectl é a ferramenta na linha de comando para gerenciar o cluster Kubernetes
    
	Para definir um container no Kubernetes é preciso definir um Pod
        Um Pod é a menor unidade de deploy no Kubernetes
        Um Pod agrupa um ou mais containers que compartilham a mesma interface de rede e sistema de arquivos
        Um Pod é um objeto no Kubernetes descrito por um arquivo YML
        O YML do Pod define qual é a imagem, porta, versão, nome entre outras configurações

13 - Comandos

pedro@phantro MINGW64 /d/curso/kubernetes (master)
$ kubectl explain node
KIND:     Node
VERSION:  v1

DESCRIPTION:
     Node is a worker node in Kubernetes. Each node will have a unique
     identifier in the cache (i.e. in etcd).

FIELDS:
   apiVersion   <string>
     APIVersion defines the versioned schema of this representation of an
     object. Servers should convert recognized schemas to the latest internal
     value, and may reject unrecognized values. More info:
     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources

   kind <string>
     Kind is a string value representing the REST resource this object
     represents. Servers may infer this from the endpoint the client submits
     requests to. Cannot be updated. In CamelCase. More info:
     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds

   metadata     <Object>
     Standard object's metadata. More info:
     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

   spec <Object>
     Spec defines the behavior of a node.
     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

   status       <Object>
     Most recently observed status of the node. Populated by the system.
     Read-only. More info:
     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status


pedro@phantro MINGW64 /d/curso/kubernetes (master)
$ kubectl explain pod
KIND:     Pod
VERSION:  v1

DESCRIPTION:
     Pod is a collection of containers that can run on a host. This resource is
     created by clients and scheduled onto hosts.

FIELDS:
   apiVersion   <string>
     APIVersion defines the versioned schema of this representation of an
     object. Servers should convert recognized schemas to the latest internal
     value, and may reject unrecognized values. More info:
     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources

   kind <string>
     Kind is a string value representing the REST resource this object
     represents. Servers may infer this from the endpoint the client submits
     requests to. Cannot be updated. In CamelCase. More info:
     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds

   metadata     <Object>
     Standard object's metadata. More info:
     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

   spec <Object>
     Specification of the desired behavior of the pod. More info:
     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

   status       <Object>
     Most recently observed status of the pod. This data may not be up to date.
     Populated by the system. Read-only. More info:
     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

14 - Criando Pods com Deployment 

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ kubectl create -f deployment-aplicacao.yml
deployment.apps/aplicacao-noticia-deployment created

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$

15 - Verificando se o POD está rodando
pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ kubectl get pods
NAME                                            READY   STATUS    RESTARTS   AGE
aplicacao-noticia                               1/1     Running   0          33m
aplicacao-noticia-deployment-7b48c4c7d8-swl4p   1/1     Running   0          68s

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$

15 - Verificando como um Pod com Deployment se comporta ao ser removido

$ kubectl get pods
NAME                                            READY   STATUS    RESTARTS   AGE
aplicacao-noticia                               1/1     Running   0          36m
aplicacao-noticia-deployment-7b48c4c7d8-swl4p   1/1     Running   0          4m26s

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ kubectl delete pods aplicacao-noticia-deployment-7b48c4c7d8-swl4p
pod "aplicacao-noticia-deployment-7b48c4c7d8-swl4p" deleted

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ kubectl get pods
NAME                                            READY   STATUS    RESTARTS   AGE
aplicacao-noticia                               1/1     Running   0          37m
aplicacao-noticia-deployment-7b48c4c7d8-w4ngx   1/1     Running   0          5s

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ kubectl delete pods aplicacao-noticia
pod "aplicacao-noticia" deleted

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ kubectl get pods
NAME                                            READY   STATUS    RESTARTS   AGE
aplicacao-noticia-deployment-7b48c4c7d8-w4ngx   1/1     Running   0          31s

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$

16 - Arquitetura

User 

o	   ||=============||
|´ =>> || LoadBalance || ====> Deployment =====> pod
^	   || ============||
	 
17 - Criando o LoadBalancer

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ kubectl create -f servico-aplicacao-noticia.yml
service/servico-aplicacao-noticia created

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ minikube service servico-aplicacao-noticia --url
http://192.168.99.106:31417


18 - Acessando um Pod


pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ kubectl get pods
NAME                                            READY   STATUS    RESTARTS   AGE
aplicacao-noticia-deployment-7b48c4c7d8-w4ngx   1/1     Running   0          14m

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ winpty kubectl exec -it aplicacao-noticia-deployment-7b48c4c7d8-w4ngx bash
root@aplicacao-noticia-deployment-7b48c4c7d8-w4ngx:/var/www/html#
root@aplicacao-noticia-deployment-7b48c4c7d8-w4ngx:/var/www/html#
root@aplicacao-noticia-deployment-7b48c4c7d8-w4ngx:/var/www/html#
root@aplicacao-noticia-deployment-7b48c4c7d8-w4ngx:/var/www/html#
root@aplicacao-noticia-deployment-7b48c4c7d8-w4ngx:/var/www/html#
root@aplicacao-noticia-deployment-7b48c4c7d8-w4ngx:/var/www/html#



19 - Criando Imagem com o conteúdo da aplicação

pedro@phantro MINGW64 ~/kubernetes
$ winpty docker login -u pgfpdocker
Password:
WARNING! Your password will be stored unencrypted in C:\Users\pedro\.docker\config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

pedro@phantro MINGW64 ~/kubernetes
$ docker build -t noticias-alura .
Sending build context to Docker daemon  106.2MB
Step 1/2 : FROM jnlucas/image-phpmysql:latest
 ---> 83dbf3907361
Step 2/2 : COPY noticias /var/www/html
 ---> Using cache
 ---> 244e2b2c6553
Successfully built 244e2b2c6553
Successfully tagged noticias-alura:latest
SECURITY WARNING: You are building a Docker image from Windows against a non-Windows Docker host. All files and directories added to build context will have '-rwxr-xr-x' permissions. It  recommended to double check and reset permissions for sensitive files and directories.

pedro@phantro MINGW64 ~/kubernetes
$ docker tag noticias-alura pgfpdocker/noticia-alura:v1

pedro@phantro MINGW64 ~/kubernetes
$ docker push pgfpdocker/noticia-alura:v1
The push refers to repository [docker.io/pgfpdocker/noticia-alura]
a245b3259026: Preparing
3cea1c3d7bce: Preparing
5e2d46af7123: Preparing
d1177381575d: Preparing
c9f301e0817a: Preparing
2960b2cbb694: Preparing
a57495858b40: Preparing
f312a77fc287: Preparing
7bd2d1f0758a: Preparing
cfc46f8f22a0: Preparing
1d774c7ae742: Preparing
1aab22401f12: Preparing
13ab94c9aa15: Preparing
588ee8a7eeec: Preparing
bebcda512a6d: Preparing
5ce59bfe8a3a: Preparing
d89c229e40ae: Preparing
9311481e1bdc: Preparing
4dd88f8a7689: Preparing
b1841504f6c8: Preparing
6eb3cfd4ad9e: Preparing
82bded2c3a7c: Preparing
b87a266e6a9c: Preparing
3c816b4ead84: Preparing
2960b2cbb694: Waiting
a57495858b40: Waiting
f312a77fc287: Waiting
7bd2d1f0758a: Waiting
cfc46f8f22a0: Waiting
1d774c7ae742: Waiting
1aab22401f12: Waiting
13ab94c9aa15: Waiting
588ee8a7eeec: Waiting
bebcda512a6d: Waiting
5ce59bfe8a3a: Waiting
d89c229e40ae: Waiting
9311481e1bdc: Waiting
4dd88f8a7689: Waiting
b1841504f6c8: Waiting
6eb3cfd4ad9e: Waiting
82bded2c3a7c: Waiting
b87a266e6a9c: Waiting
3c816b4ead84: Waiting
5e2d46af7123: Mounted from jnlucas/image-phpmysql
d1177381575d: Mounted from jnlucas/image-phpmysql
3cea1c3d7bce: Mounted from jnlucas/image-phpmysql
c9f301e0817a: Mounted from jnlucas/image-phpmysql
a57495858b40: Mounted from jnlucas/image-phpmysql
f312a77fc287: Mounted from jnlucas/image-phpmysql
2960b2cbb694: Mounted from jnlucas/image-phpmysql
7bd2d1f0758a: Mounted from jnlucas/image-phpmysql
1aab22401f12: Mounted from jnlucas/image-phpmysql
1d774c7ae742: Mounted from jnlucas/image-phpmysql
13ab94c9aa15: Mounted from jnlucas/image-phpmysql
bebcda512a6d: Mounted from jnlucas/image-phpmysql
588ee8a7eeec: Mounted from jnlucas/image-phpmysql
5ce59bfe8a3a: Mounted from jnlucas/image-phpmysql
cfc46f8f22a0: Pushed
d89c229e40ae: Mounted from jnlucas/image-phpmysql
4dd88f8a7689: Mounted from jnlucas/image-phpmysql
9311481e1bdc: Mounted from jnlucas/image-phpmysql
b1841504f6c8: Mounted from jnlucas/image-phpmysql
6eb3cfd4ad9e: Mounted from jnlucas/image-phpmysql
82bded2c3a7c: Mounted from jnlucas/image-phpmysql
b87a266e6a9c: Mounted from jnlucas/image-phpmysql
3c816b4ead84: Mounted from jnlucas/image-phpmysql
a245b3259026: Pushed
v1: digest: sha256:052c83b7f53a4eb31ad423b395dc95ef4800eb295202d229506c727f97c013b9 size: 5344

pedro@phantro MINGW64 ~/kubernetes


pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ minikube stop
* Stopping "minikube" in virtualbox ...
* Node "minikube" stopped.


20 - Aula 3.2 

## Iniciando Minikube
pedro@phantro MINGW64 ~/kubernetes
$ minikube start
* minikube v1.11.0 on Microsoft Windows 7 Ultimate Service Pack 1 6.1.7601 Build 7601
* Using the virtualbox driver based on existing profile

! 'virtualbox' driver reported an issue: C:\Program Files\Oracle\VirtualBox\VBoxManage.exe list hostinfo failed:

* Suggestion: Install the latest version of VirtualBox
* Documentation: https://minikube.sigs.k8s.io/docs/reference/drivers/virtualbox/

X Failed to validate 'virtualbox' driver

pedro@phantro MINGW64 ~/kubernetes
$ minikube restart
Error: unknown command "restart" for "minikube"

Did you mean this?
        start

Run 'minikube --help' for usage.

pedro@phantro MINGW64 ~/kubernetes
$ minikube start
* minikube v1.11.0 on Microsoft Windows 7 Ultimate Service Pack 1 6.1.7601 Build 7601
* Using the virtualbox driver based on existing profile
* Starting control plane node minikube in cluster minikube
* Restarting existing virtualbox VM for "minikube" ...
* Found network options:
  - NO_PROXY=192.168.99.100
  - no_proxy=192.168.99.100
* Preparing Kubernetes v1.18.3 on Docker 19.03.8 ...
  - env NO_PROXY=192.168.99.100
* Verifying Kubernetes components...
* Enabled addons: dashboard, default-storageclass, storage-provisioner
* Done! kubectl is now configured to use "minikube"

! C:\Users\pedro\Desktop\HomeOffice\Kubernetes\kubectl.exe is version 1.16.8, which may be incompatible with Kubernetes 1.18.3.
* You can also use 'minikube kubectl -- get pods' to invoke a matching version

pedro@phantro MINGW64 ~/kubernetes
$ minikube status
minikube
type: Control Plane
host: Running
kubelet: Running
apiserver: Running
kubeconfig: Configured


pedro@phantro MINGW64 ~/kubernetes
$ minikube --help
minikube provisions and manages local Kubernetes clusters optimized for development workflows.

Basic Commands:
  start          Starts a local Kubernetes cluster
  status         Gets the status of a local Kubernetes cluster
  stop           Stops a running local Kubernetes cluster
  delete         Deletes a local Kubernetes cluster
  dashboard      Access the Kubernetes dashboard running within the minikube cluster
  pause          pause Kubernetes
  unpause        unpause Kubernetes

Images Commands:
  docker-env     Configure environment to use minikube's Docker daemon
  podman-env     Configure environment to use minikube's Podman service
  cache          Add, delete, or push a local image into minikube

Configuration and Management Commands:
  addons         Enable or disable a minikube addon
  config         Modify persistent configuration values
  profile        Get or list the the current profiles (clusters)
  update-context Update kubeconfig in case of an IP or port change

Networking and Connectivity Commands:
  service        Returns a URL to connect to a service
  tunnel         Connect to LoadBalancer services

Advanced Commands:
  mount          Mounts the specified directory into minikube
  ssh            Log into the minikube environment (for debugging)
  kubectl        Run a kubectl binary matching the cluster version
  node           Add, remove, or list additional nodes

Troubleshooting Commands:
  ssh-key        Retrieve the ssh identity key path of the specified cluster
  ip             Retrieves the IP address of the running cluster
  logs           Returns logs to debug a local Kubernetes cluster
  update-check   Print current and latest version number
  version        Print the version of minikube

Other Commands:
  completion     Generate command completion for a shell

Use "minikube <command> --help" for more information about a given command.

pedro@phantro MINGW64 ~/kubernetes
$ minikube ip
192.168.99.106

pedro@phantro MINGW64 ~/kubernetes
$ ping 192.168.99.106

Pinging 192.168.99.106 with 32 bytes of data:
Reply from 192.168.99.106: bytes=32 time<1ms TTL=64
Reply from 192.168.99.106: bytes=32 time<1ms TTL=64
Reply from 192.168.99.106: bytes=32 time<1ms TTL=64

Ping statistics for 192.168.99.106:
    Packets: Sent = 3, Received = 3, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms
Control-C

pedro@phantro MINGW64 ~/kubernetes
$ kubectl get pods
NAME                                            READY   STATUS    RESTARTS   AGE
aplicacao-noticia-deployment-5bf97c9745-2xqf2   1/1     Running   1          20h

pedro@phantro MINGW64 ~/kubernetes
$

pedro@phantro MINGW64 ~/kubernetes
$ ls
 comandos.txt   docker-compose.yml   Dockerfile   kubernetes/   mysql/  'Network Inspect.txt'   noticias/   sistema/  'vm default network info.txt'

pedro@phantro MINGW64 ~/kubernetes
$ cd kubernetes/

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ ls
aplicacao.yml  deployment-aplicacao.yml  deployment-sistema.yml  servico-aplicacao-noticia.yml  servico-aplicacao-sistema.yml


## Enviando os serviços para o cluster minikube 
pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ kubectl create -f deployment-sistema.yml
deployment.apps/aplicacao-sistema-deployment created

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ kubectl create -f servico-aplicacao-sistema.yml
service/servico-aplicacao-sistema created


## Verificando IPs do serviços
pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ minikube service servico-aplicacao-sistema
|-----------|---------------------------|-------------|-----------------------------|
| NAMESPACE |           NAME            | TARGET PORT |             URL             |
|-----------|---------------------------|-------------|-----------------------------|
| default   | servico-aplicacao-sistema | http/80     | http://192.168.99.106:32650 |
|-----------|---------------------------|-------------|-----------------------------|
* Opening service default/servico-aplicacao-sistema in default browser...

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ minikube service servico-aplicacao-noticia
|-----------|---------------------------|-------------|-----------------------------|
| NAMESPACE |           NAME            | TARGET PORT |             URL             |
|-----------|---------------------------|-------------|-----------------------------|
| default   | servico-aplicacao-noticia | http/80     | http://192.168.99.106:31382 |
|-----------|---------------------------|-------------|-----------------------------|
* Opening service default/servico-aplicacao-noticia in default browser...

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$ kubectl get pods
NAME                                            READY   STATUS    RESTARTS   AGE
aplicacao-noticia-deployment-5bf97c9745-2xqf2   1/1     Running   1          20h
aplicacao-sistema-deployment-65777bc54-hvhkl    1/1     Running   0          2m52s

pedro@phantro MINGW64 ~/kubernetes/kubernetes
$



